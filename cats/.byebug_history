c
var local
c
var local
quit
self.class.columns.join(" = ?")
var local
c
var local
quit
var local
quit
var local
quit
var local
[@cols, @qs.join(", "), @args]
[@cols, @qs.join(", "), @argsC]
@args = self.attribute_values.join(", ")
[@cols, @qs.join(", "), @args]
[cols, qs.join(", "), args]
@cols = self.class.columns.join(", ")
@qs = ["?"]*self.class.columns.length
["?"]*self.class.columns.length
self.attribute_values.join(", ")
[cols, qs.join(", "), args]
continue
s
quit
["?"]*self.class.columns.length
self.attribute_values.join(", ")
self.attribute_values
self.class.columns.join(", ")
quit
contunue
continue
quit
self.class.columns.length
self.attribute_values.join(", ")
self.attribute_values
quit
@attributes_values
self.class.columns.join(", ")
self.class.columns
quit
self.class.columns.map { |col| col }
@attributes.values
@attributes
quit
var local
quit
var local
quit
display args
display qs
display cols
cols, qs, args
args
arg
qs
cols
quit
var local
continue
s
continue
s
var local
s
var local
s
args
qs
cols
quit
var local
self.class.table_name
args
cols
quit
args
cols
quit
qs
attr
quit
DBConnection.instance.execute(<<-SQL, attr) select * from attr SQL
DBConnection.instance.execute(<<-SQL, attr)
@attributes
attr
quit
attr
qttr
quit
attr
quit
qs.join(",")
qs
cols
self.attribute_values
@attributes
c
qs.join(",")
qs = ["?"]*self.class.columns.length
qs.join(","
["?"]*self.class.columns.length.join(",")qs.join(","
["?"]*self.class.columns.length.join(",")
"?".join(",")*3
"?"*3.join(",")
"?"*3
cols
["?"]*self.class.columns.length
self.class.columns
[self.class.columns.join(",")]
var local
s
var local
n
var local
c
var local
s
c
quit
continue
cols.count
cols.length
["?"]*5
["?
self.class.columns
self.class.columns.join(",")
self.columns.join(",")
columns.join(",")
quit
c
quit
cc
c
cc
c
cc
c
quit
c
self.class.columns.include?(key)
var local
c
var local
c
var local
self.class.columns.include?(key)
self.class.columns
c
self.methods.include?(test)
self.methods.include?(key)
key
self.methods.include?(:key)
self.methods
self.owner_id
self.test
self.id
self.name
params
self.attributes
